<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ChatCli.Styles">
    <!-- Copyright © NBS-Tech Team 2019.All rights reserved. -->
    <SolidColorBrush x:Key="MenuBorderBrush" Color="#9208921e"/>
    <SolidColorBrush x:Key="NormalMenuForeground" Color="#9999991e"/>
    <SolidColorBrush x:Key="NormalMenuBackground" Color="#9999991e"/>
    <SolidColorBrush x:Key="PressedMenuBackground" Color="#0000331a" />
    <SolidColorBrush x:Key="HighlightMenuTextStyle" Color="#2a89a4" />
    <SolidColorBrush x:Key="CheckedMenuBackground" Color="#2a89a4" />
    <SolidColorBrush x:Key="CheckedMenuForeground" Color="#000033" />
    <!--Menu分割线-->
    <Style TargetType="Separator" x:Key="SeparatorStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Rectangle Fill="#FFC6D9E2" Height="1" Margin="2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MenuItem FontAwesome Style -->
    <Style x:Key="FIconMenuItemStyle" TargetType="MenuItem">
        <Setter Property="BorderThickness" Value="0.7"/>
        <Setter Property="BorderBrush" Value="{StaticResource MenuBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource NormalMenuBackground}" />
        <Setter Property="Foreground" Value="#5D5C5C" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <!-- Item Css -->
                    <Border x:Name="border" Background="Transparent" Height="{TemplateBinding Height}" Opacity="1">
                        <Grid VerticalAlignment="Center" Margin="{TemplateBinding Margin}" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="icon_col" MaxWidth="30" SharedSizeGroup="MenuIconColGrp"/>
                                <ColumnDefinition x:Name="text_col" Width="Auto" SharedSizeGroup="MenuTextColGrp"/>
                                <ColumnDefinition x:Name="igt_col" Width="Auto" SharedSizeGroup="MenuIGTColGrp" />
                                <ColumnDefinition x:Name="arrow_col" Width="12" SharedSizeGroup="MenuArrowColGrp" />
                            </Grid.ColumnDefinitions>
                            <!-- icon -->
                            <TextBlock x:Name="Part_Icon" Text="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" Margin="2,1,1,1"
                                       FontSize="{TemplateBinding FontSize}" Style="{StaticResource FIcon}" />
                            <!-- Header -->
                            <ContentPresenter Grid.Column="1" x:Name="txtHeader" Margin="6,1,5,2" MinWidth="45" RecognizesAccessKey="True"
                                              VerticalAlignment="Center" ContentSource="Header"/>
                            <!-- Menu Text -->
                            <TextBlock x:Name="IGTHost" Grid.Column="2" Margin="4,1,3,1" Text="{TemplateBinding InputGestureText}"
                                       FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center" Visibility="Visible" Foreground="{TemplateBinding Foreground}"/>

                            <!-- 右侧箭头 -->
                            <TextBlock x:Name="Part_Arrow" Grid.Column="3" Text="&#xf0da;" Foreground="{TemplateBinding Foreground}" 
                                       FontSize="10" Style="{StaticResource FIcon}"/>

                            <!-- 淡出SubItem容器 -->
                            <Popup x:Name="SubMenuPopup" AllowsTransparency="True" IsOpen="{Binding IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}" 
                                   Placement="Bottom" Focusable="False" VerticalOffset="0" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuAnimationKey}}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="0" Margin="5" BorderBrush="{StaticResource MenuBorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                        <StackPanel Margin="0" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <!-- 触发器 -->
                    <ControlTemplate.Triggers>
                        <!-- 第一级（有子菜单） -->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Part_Arrow" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost" />
                            <Setter Property="Margin" Value="5,1,1,1" TargetName="Part_Icon" />
                            <Setter Property="Margin" Value="3,1,6,1" TargetName="txtHeader" />
                            <Setter Property="MinWidth" Value="50" TargetName="txtHeader" />
                            <Setter Property="Width" Value="0" TargetName="arrow_col" />
                        </Trigger>
                        <!-- 第一级（无子菜单）-->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Part_Arrow"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                            <Setter Property="Margin" Value="5,1,1,1" TargetName="Part_Icon"/>
                            <Setter Property="Margin" Value="6,1,6,1" TargetName="txtHeader"/>
                            <Setter Property="MinWidth" Value="45" TargetName="txtHeader"/>
                            <Setter Property="Width" Value="0" TargetName="arrow_col"/>
                        </Trigger>
                        <!--SubmenuHeader:子菜单，有子菜单-->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="Visibility" Value="Visible" TargetName="Part_Arrow"/>
                            <Setter Property="Placement" Value="Right" TargetName="SubMenuPopup"/>
                        </Trigger>
                        <!--SubMenuItem:子菜单，无子级-->
                        <Trigger Property="Role" Value="SubMenuItem">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Part_Arrow"/>
                        </Trigger>
                        <!--选中状态，优先级将高于Icon-->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Part_Icon" Value="&#xe62a;" Property="Text"></Setter>
                            <Setter TargetName="Part_Icon" Value="18" Property="FontSize"></Setter>
                            <Setter TargetName="Part_Icon" Value="{StaticResource CheckedMenuForeground}" Property="Foreground"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Value="1" Property="Opacity"></Setter>
                        </Trigger>
                        <!--高亮状态-->
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PressedMenuBackground}"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource HighlightMenuTextStyle}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PressedMenuBackground}"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource CheckedMenuBackground}"></Setter>
                        </Trigger>
                        <!--子菜单打开状态-->
                        <Trigger Property="IsSubmenuOpen" Value="true" >
                            <Setter TargetName="Part_Arrow" Value="{StaticResource CheckedMenuForeground}" Property="Foreground"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 默认Menu Style -->
    <Style x:Key="DefaultMenuItemStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource FIconMenuItemStyle}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock x:Name="txtHeader" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="3,1,5,1"
                               FontSize="{Binding FontSize,RelativeSource={RelativeSource AncestorType={x:Type MenuItem},Mode=FindAncestor}}"
                               Text="{Binding Header,RelativeSource={RelativeSource AncestorType={x:Type MenuItem},Mode=FindAncestor}}"
                               Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MenuItem},Mode=FindAncestor}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DefaultMenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultMenuItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ItemsPresenter Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- 右键弹出 -->
    <Style x:Key="DefContextMenuStyle" TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="BorderBrush" Value="{StaticResource MenuBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource NormalMenuBackground}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource NormalMenuForeground}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultMenuItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" Margin="5"
                                BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Grid.IsSharedSizeScope="True" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                KeyboardNavigation.TabNavigation="Cycle" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="Border" Property="Effect" Value="{StaticResource DefaultDropShadow}">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>