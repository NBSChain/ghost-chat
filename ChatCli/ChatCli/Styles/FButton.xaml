<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ChatCli.Component"
                    >
    <!-- Copyright © NBS-Tech Team 2019.All rights reserved. -->
    <ControlTemplate x:Key="FButton_Template" TargetType="{x:Type local:FButton}">
        <Border x:Name="border" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Background}"
                Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Height}"
                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Radius}"
                Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Width}">
            <!-- Icon/Text -->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <TextBlock x:Name="icon" Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=FIconMargin}"
                           RenderTransformOrigin="0.5,0.5" Style="{StaticResource FIcon}"
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=FIcon}"
                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=FIconSize}"
                           Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Foreground}">
                    <TextBlock.RenderTransform>
                        <RotateTransform x:Name="transIcon" Angle="0"/>
                    </TextBlock.RenderTransform>
                </TextBlock>

                <TextBlock VerticalAlignment="Center" x:Name="txt" 
                           TextDecorations="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ContentDecorations}"
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Content}"
                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=FontSize}"
                           Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Foreground}"></TextBlock>
            </StackPanel>
        </Border>
        <!-- 触发器 -->
        <ControlTemplate.Triggers>
            <!-- hover -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background"  TargetName="border"
                        Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=MouseOverBackground}"/>
                <Setter Property="Foreground" TargetName="icon"
                        Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=MouseOverForeground}"/>
                <Setter Property="Foreground"  TargetName="txt"
                        Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=MouseOverForeground}"/>
            </Trigger>
            <!-- Pressed -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border"
                        Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=PressedBackground}"/>
                <Setter Property="Foreground" TargetName="icon" 
                        Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=PressesForeground}"/>
                <Setter Property="Foreground" TargetName="txt"
                        Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=PressesForeground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" TargetName="border"/>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true"/>
                    <Condition Property="AllowsAnimation" Value="true"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle"
                                             To="180" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="transIcon"
                                             Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
                  
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- FButton 基本样式 -->
    <Style TargetType="{x:Type local:FButton}">
        <Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"/>
        <Setter Property="MouseOverBackground" Value="{StaticResource ButtonMouseOverBackground}"/>
        <Setter Property="MouseOverForeground" Value="{StaticResource ButtonMouseOverForeground}" />
        <Setter Property="PressedBackground" Value="{StaticResource ButtonPressedBackground}" />
        <Setter Property="PressedForeground" Value="{StaticResource ButtonPressedForeground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="FIconSize" Value="20" />
        <Setter Property="Padding" Value="2,1,2,1"/>
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="FIconMargin" Value="0,0,3,0"/>
        <Setter Property="AllowsAnimation" Value="True"/>
        <Setter Property="Template" Value="{StaticResource FButton_Template}"/>
    </Style>

    <Style x:Key="FButtonTransparency" TargetType="{x:Type local:FButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MouseOverBackground" Value="Transparent" />
        <Setter Property="PressedBackground" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource TextForeground}" />
        <Setter Property="MouseOverForeground" Value="{StaticResource MouseOverForeground}" />
        <Setter Property="PressedForeground" Value="{StaticResource PressedForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FIconSize" Value="20" />
        <Setter Property="Template" Value="{StaticResource FButton_Template}"/>
        <Setter Property="Padding" Value="2,1,2,1" />
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="FIconMargin" Value="0,0,3,0" />
        <Setter Property="AllowsAnimation" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>
</ResourceDictionary>